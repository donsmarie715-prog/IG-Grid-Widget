async function loadGrid() {
  const params = new URLSearchParams(window.location.search);
  const status = params.get('status') || document.getElementById('statusFilter')?.value || '';
  const platform = params.get('platform') || document.querySelector('.platform-btn.active')?.dataset.value || '';

  // Build API URL with filters
  const url = `/api/feed?${new URLSearchParams({ status, platform })}`;

  const grid = document.getElementById('grid');
  grid.textContent = 'Loading Instagram posts...';

  let data;
  try {
    const res = await fetch(url, { cache: 'no-store' });
    data = await res.json();
  } catch (err) {
    grid.innerHTML = `<div class="empty">Could not load data. Check console / API.</div>`;
    console.error('Fetch error:', err);
    return;
  }

  const items = data.items || [];
  if (!items.length) {
    grid.innerHTML = `<div class="empty">No items match your filters yet.</div>`;
    return;
  }

  grid.innerHTML = '';
  items.forEach((item) => {
    const div = document.createElement('div');
    div.className = 'card';

    if (item.image && /^https?:\/\//i.test(item.image)) {
      const img = document.createElement('img');
      img.src = item.image;
      img.alt = item.title || '';
      div.appendChild(img);
    } else {
      const ph = document.createElement('div');
      ph.className = 'placeholder';
      ph.textContent = 'No image';
      div.appendChild(ph);
    }

    if (item.status) {
      const badge = document.createElement('div');
      badge.className = 'badge';
      badge.textContent = item.status;
      div.appendChild(badge);
    }

    grid.appendChild(div);
  });
}

// UI wiring
(function init() {
  // Platform buttons
  const group = document.getElementById('platformGroup');
  group?.addEventListener('click', (e) => {
    const btn = e.target.closest('.platform-btn');
    if (!btn) return;

    // toggle active
    Array.from(group.querySelectorAll('.platform-btn')).forEach(b => b.classList.remove('active'));
    btn.classList.add('active');

    // update URL param
    const params = new URLSearchParams(window.location.search);
    params.set('platform', btn.dataset.value || '');
    history.replaceState(null, '', `?${params.toString()}`);

    loadGrid();
  });

  // Status filter
  document.getElementById('statusFilter')?.addEventListener('change', (e) => {
    const params = new URLSearchParams(window.location.search);
    params.set('status', e.target.value || '');
    history.replaceState(null, '', `?${params.toString()}`);
    loadGrid();
  });

  // Refresh button (forces API re-fetch)
  const refreshBtn = document.getElementById('refresh');
  refreshBtn?.addEventListener('click', () => {
    refreshBtn.classList.add('spin');
    setTimeout(() => refreshBtn.classList.remove('spin'), 450);
    loadGrid(); // no-store fetch above bypasses cache
  });

  loadGrid();
})();
